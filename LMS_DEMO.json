{
	"info": {
		"_postman_id": "complete-lms-api-collection",
		"name": "Complete LMS Backend API",
		"description": "Complete Learning Management System Backend API Collection\n\nüöÄ **Setup:**\n1. Import this collection to Postman\n2. Set up environment variables\n3. Start with Health Check\n4. Test Authentication endpoints first\n5. Use different tokens for different roles\n\nüìù **Test Accounts (from seed):**\n- Admin: admin@lms.com / admin123\n- Teacher 1: guru.matematika@lms.com / guru123\n- Teacher 2: guru.inggris@lms.com / guru123\n- Teacher 3: guru.ipa@lms.com / guru123\n- Student 1: siswa1@lms.com / siswa123\n- Student 2: siswa2@lms.com / siswa123\n- Student 3: siswa3@lms.com / siswa123\n- Student 4: siswa4@lms.com / siswa123\n\nüîë **Class Enrollment Codes:**\n- Math Class: MATH10A\n- English Class: ENG10B\n- IPA Class: IPA11A",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "üü¢ Health Check",
			"item": [
				{
					"name": "Health Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/health",
							"host": ["{{BASE_URL}}"],
							"path": ["health"]
						},
						"description": "Check if the server is running and healthy"
					},
					"response": []
				}
			]
		},
		{
			"name": "üîê Authentication",
			"item": [
				{
					"name": "Register User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.to.have.status(201)) {",
									"    const response = pm.response.json();",
									"    console.log('‚úÖ User registered successfully');",
									"    console.log('üë§ User:', response.data.user);",
									"} else {",
									"    console.log('‚ùå Registration failed:', pm.response.text());",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"New Student\",\n    \"email\": \"newstudent@lms.com\",\n    \"password\": \"password123\",\n    \"role\": \"STUDENT\"\n}"
						},
						"url": {
							"raw": "{{BASE_URL}}/api/auth/register",
							"host": ["{{BASE_URL}}"],
							"path": ["api", "auth", "register"]
						}
					}
				},
				{
					"name": "Login Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.to.have.status(200)) {",
									"    const response = pm.response.json();",
									"    if (response.success && response.data.token) {",
									"        pm.environment.set('ADMIN_TOKEN', response.data.token);",
									"        console.log('‚úÖ Admin login successful');",
									"    }",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"admin@lms.com\",\n    \"password\": \"admin123\"\n}"
						},
						"url": {
							"raw": "{{BASE_URL}}/api/auth/login",
							"host": ["{{BASE_URL}}"],
							"path": ["api", "auth", "login"]
						}
					}
				},
				{
					"name": "Login Teacher Math",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.to.have.status(200)) {",
									"    const response = pm.response.json();",
									"    if (response.success && response.data.token) {",
									"        pm.environment.set('TEACHER_TOKEN', response.data.token);",
									"        console.log('‚úÖ Teacher login successful');",
									"    }",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"guru.matematika@lms.com\",\n    \"password\": \"guru123\"\n}"
						},
						"url": {
							"raw": "{{BASE_URL}}/api/auth/login",
							"host": ["{{BASE_URL}}"],
							"path": ["api", "auth", "login"]
						}
					}
				},
				{
					"name": "Login Student 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.to.have.status(200)) {",
									"    const response = pm.response.json();",
									"    if (response.success && response.data.token) {",
									"        pm.environment.set('STUDENT_TOKEN', response.data.token);",
									"        console.log('‚úÖ Student login successful');",
									"    }",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"siswa1@lms.com\",\n    \"password\": \"siswa123\"\n}"
						},
						"url": {
							"raw": "{{BASE_URL}}/api/auth/login",
							"host": ["{{BASE_URL}}"],
							"path": ["api", "auth", "login"]
						}
					}
				},
				{
					"name": "Get Profile",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{STUDENT_TOKEN}}"
							}
						],
						"url": {
							"raw": "{{BASE_URL}}/api/auth/profile",
							"host": ["{{BASE_URL}}"],
							"path": ["api", "auth", "profile"]
						}
					}
				},
				{
					"name": "Update Profile",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{STUDENT_TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Ahmad Rizki Updated\"\n}"
						},
						"url": {
							"raw": "{{BASE_URL}}/api/auth/profile",
							"host": ["{{BASE_URL}}"],
							"path": ["api", "auth", "profile"]
						}
					}
				},
				{
					"name": "Change Password",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{STUDENT_TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"currentPassword\": \"siswa123\",\n    \"newPassword\": \"newpassword123\",\n    \"confirmPassword\": \"newpassword123\"\n}"
						},
						"url": {
							"raw": "{{BASE_URL}}/api/auth/change-password",
							"host": ["{{BASE_URL}}"],
							"path": ["api", "auth", "change-password"]
						}
					}
				}
			]
		},
		{
			"name": "üè´ Class Management",
			"item": [
				{
					"name": "Get User Classes (Teacher)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{TEACHER_TOKEN}}"
							}
						],
						"url": {
							"raw": "{{BASE_URL}}/api/classes",
							"host": ["{{BASE_URL}}"],
							"path": ["api", "classes"]
						}
					}
				},
				{
					"name": "Get User Classes (Student)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{STUDENT_TOKEN}}"
							}
						],
						"url": {
							"raw": "{{BASE_URL}}/api/classes",
							"host": ["{{BASE_URL}}"],
							"path": ["api", "classes"]
						}
					}
				},
				{
					"name": "Create New Class",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.to.have.status(201)) {",
									"    const response = pm.response.json();",
									"    if (response.success && response.data.class) {",
									"        pm.environment.set('CLASS_ID', response.data.class.id);",
									"        pm.environment.set('ENROLL_CODE', response.data.class.enrollCode);",
									"        console.log('‚úÖ Class created with ID:', response.data.class.id);",
									"        console.log('üîë Enrollment code:', response.data.class.enrollCode);",
									"    }",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{TEACHER_TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Test Matematika Kelas 12\",\n    \"description\": \"Kelas matematika untuk siswa kelas 12 semester ganjil\",\n    \"subjectId\": 1,\n    \"academicPeriodId\": 1\n}"
						},
						"url": {
							"raw": "{{BASE_URL}}/api/classes",
							"host": ["{{BASE_URL}}"],
							"path": ["api", "classes"]
						}
					}
				},
				{
					"name": "Enroll Student to Class",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{STUDENT_TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"enrollCode\": \"MATH10A\"\n}"
						},
						"url": {
							"raw": "{{BASE_URL}}/api/classes/enroll",
							"host": ["{{BASE_URL}}"],
							"path": ["api", "classes", "enroll"]
						}
					}
				},
				{
					"name": "Get Class Details",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{TEACHER_TOKEN}}"
							}
						],
						"url": {
							"raw": "{{BASE_URL}}/api/classes/1",
							"host": ["{{BASE_URL}}"],
							"path": ["api", "classes", "1"]
						}
					}
				},
				{
					"name": "Get Class Students",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{TEACHER_TOKEN}}"
							}
						],
						"url": {
							"raw": "{{BASE_URL}}/api/classes/1/students",
							"host": ["{{BASE_URL}}"],
							"path": ["api", "classes", "1", "students"]
						}
					}
				},
				{
					"name": "Update Class",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{TEACHER_TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Matematika Kelas 10A Updated\",\n    \"description\": \"Deskripsi kelas yang sudah diupdate\"\n}"
						},
						"url": {
							"raw": "{{BASE_URL}}/api/classes/1",
							"host": ["{{BASE_URL}}"],
							"path": ["api", "classes", "1"]
						}
					}
				},
				{
					"name": "Leave Class (Student)",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{STUDENT_TOKEN}}"
							}
						],
						"url": {
							"raw": "{{BASE_URL}}/api/classes/1/leave",
							"host": ["{{BASE_URL}}"],
							"path": ["api", "classes", "1", "leave"]
						}
					}
				}
			]
		},
		{
			"name": "üìö Materials",
			"item": [
				{
					"name": "Create Material (Text Only)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.to.have.status(201)) {",
									"    const response = pm.response.json();",
									"    if (response.success && response.data.material) {",
									"        pm.environment.set('MATERIAL_ID', response.data.material.id);",
									"        console.log('‚úÖ Material created with ID:', response.data.material.id);",
									"    }",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{TEACHER_TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Pengenalan Trigonometri\",\n    \"description\": \"Materi dasar tentang trigonometri untuk kelas 10\",\n    \"content\": \"Trigonometri adalah cabang matematika yang mempelajari hubungan antara sudut dan sisi-sisi segitiga.\\n\\nRumus dasar:\\n- sin Œ∏ = y/r\\n- cos Œ∏ = x/r\\n- tan Œ∏ = y/x\\n\\nDimana r adalah jari-jari lingkaran satuan.\",\n    \"classId\": 1\n}"
						},
						"url": {
							"raw": "{{BASE_URL}}/api/materials",
							"host": ["{{BASE_URL}}"],
							"path": ["api", "materials"]
						}
					}
				},
				{
					"name": "Create Material (With File)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{TEACHER_TOKEN}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "title",
									"value": "Materi dengan File Attachment",
									"type": "text"
								},
								{
									"key": "description",
									"value": "Materi ini dilengkapi dengan file PDF",
									"type": "text"
								},
								{
									"key": "content",
									"value": "Silakan download file PDF terlampir untuk materi lengkap.",
									"type": "text"
								},
								{
									"key": "classId",
									"value": "1",
									"type": "text"
								},
								{
									"key": "file",
									"type": "file",
									"src": "path/to/your/file.pdf"
								}
							]
						},
						"url": {
							"raw": "{{BASE_URL}}/api/materials",
							"host": ["{{BASE_URL}}"],
							"path": ["api", "materials"]
						}
					}
				},
				{
					"name": "Get Class Materials",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{STUDENT_TOKEN}}"
							}
						],
						"url": {
							"raw": "{{BASE_URL}}/api/materials/classes/1",
							"host": ["{{BASE_URL}}"],
							"path": ["api", "materials", "classes", "1"]
						}
					}
				},
				{
					"name": "Get Material Details",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{STUDENT_TOKEN}}"
							}
						],
						"url": {
							"raw": "{{BASE_URL}}/api/materials/{{MATERIAL_ID}}",
							"host": ["{{BASE_URL}}"],
							"path": ["api", "materials", "{{MATERIAL_ID}}"]
						}
					}
				},
				{
					"name": "Update Material",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{TEACHER_TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Trigonometri Updated\",\n    \"description\": \"Deskripsi yang sudah diupdate\",\n    \"content\": \"Konten materi yang sudah diperbaharui dengan contoh-contoh soal.\"\n}"
						},
						"url": {
							"raw": "{{BASE_URL}}/api/materials/{{MATERIAL_ID}}",
							"host": ["{{BASE_URL}}"],
							"path": ["api", "materials", "{{MATERIAL_ID}}"]
						}
					}
				},
				{
					"name": "Download Material",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{STUDENT_TOKEN}}"
							}
						],
						"url": {
							"raw": "{{BASE_URL}}/api/materials/{{MATERIAL_ID}}/download",
							"host": ["{{BASE_URL}}"],
							"path": ["api", "materials", "{{MATERIAL_ID}}", "download"]
						}
					}
				},
				{
					"name": "Delete Material",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{TEACHER_TOKEN}}"
							}
						],
						"url": {
							"raw": "{{BASE_URL}}/api/materials/{{MATERIAL_ID}}",
							"host": ["{{BASE_URL}}"],
							"path": ["api", "materials", "{{MATERIAL_ID}}"]
						}
					}
				},
				{
					"name": "Get Material Stats (Teacher)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{TEACHER_TOKEN}}"
							}
						],
						"url": {
							"raw": "{{BASE_URL}}/api/materials/stats/teacher",
							"host": ["{{BASE_URL}}"],
							"path": ["api", "materials", "stats", "teacher"]
						}
					}
				}
			]
		},
		{
			"name": "üìù Assignments",
			"item": [
				{
					"name": "Create Assignment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.to.have.status(201)) {",
									"    const response = pm.response.json();",
									"    if (response.success && response.data.assignment) {",
									"        pm.environment.set('ASSIGNMENT_ID', response.data.assignment.id);",
									"        console.log('‚úÖ Assignment created with ID:', response.data.assignment.id);",
									"        console.log('üìã Status:', response.data.assignment.status);",
									"    }",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{TEACHER_TOKEN}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "title",
									"value": "Quiz Trigonometri",
									"type": "text"
								},
								{
									"key": "description",
									"value": "Kerjakan soal-soal trigonometri berikut dengan teliti",
									"type": "text"
								},
								{
									"key": "instruction",
									"value": "1. Baca soal dengan teliti\\n2. Kerjakan dengan langkah-langkah yang jelas\\n3. Upload jawaban dalam format PDF\\n4. Deadline: 7 hari dari sekarang",
									"type": "text"
								},
								{
									"key": "deadline",
									"value": "2024-12-31T23:59:59.000Z",
									"type": "text"
								},
								{
									"key": "maxScore",
									"value": "100",
									"type": "text"
								},
								{
									"key": "classId",
									"value": "1",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{BASE_URL}}/api/assignments",
							"host": ["{{BASE_URL}}"],
							"path": ["api", "assignments"]
						}
					}
				},
				{
					"name": "Publish Assignment",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{TEACHER_TOKEN}}"
							}
						],
						"url": {
							"raw": "{{BASE_URL}}/api/assignments/{{ASSIGNMENT_ID}}/publish",
							"host": ["{{BASE_URL}}"],
							"path": ["api", "assignments", "{{ASSIGNMENT_ID}}", "publish"]
						}
					}
				},
				{
					"name": "Get Class Assignments (Teacher)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{TEACHER_TOKEN}}"
							}
						],
						"url": {
							"raw": "{{BASE_URL}}/api/assignments/classes/1",
							"host": ["{{BASE_URL}}"],
							"path": ["api", "assignments", "classes", "1"]
						}
					}
				},
				{
					"name": "Get Class Assignments (Student)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{STUDENT_TOKEN}}"
							}
						],
						"url": {
							"raw": "{{BASE_URL}}/api/assignments/classes/1",
							"host": ["{{BASE_URL}}"],
							"path": ["api", "assignments", "classes", "1"]
						}
					}
				},
				{
					"name": "Get Assignment Details",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{STUDENT_TOKEN}}"
							}
						],
						"url": {
							"raw": "{{BASE_URL}}/api/assignments/{{ASSIGNMENT_ID}}",
							"host": ["{{BASE_URL}}"],
							"path": ["api", "assignments", "{{ASSIGNMENT_ID}}"]
						}
					}
				},
				{
					"name": "Submit Assignment (Text)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.to.have.status(201)) {",
									"    const response = pm.response.json();",
									"    if (response.success && response.data.submission) {",
									"        pm.environment.set('SUBMISSION_ID', response.data.submission.id);",
									"        console.log('‚úÖ Assignment submitted with ID:', response.data.submission.id);",
									"        console.log('‚è∞ Late status:', response.data.submission.isLate);",
									"    }",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{STUDENT_TOKEN}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "content",
									"value": "Jawaban saya untuk quiz trigonometri:\\n\\n1. sin 30¬∞ = 1/2\\n2. cos 60¬∞ = 1/2\\n3. tan 45¬∞ = 1\\n\\nDemikian jawaban saya, mohon koreksinya.",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{BASE_URL}}/api/assignments/{{ASSIGNMENT_ID}}/submit",
							"host": ["{{BASE_URL}}"],
							"path": ["api", "assignments", "{{ASSIGNMENT_ID}}", "submit"]
						}
					}
				},
				{
					"name": "Submit Assignment (With File)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{STUDENT_TOKEN}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "content",
									"value": "Jawaban lengkap terlampir dalam file PDF",
									"type": "text"
								},
								{
									"key": "file",
									"type": "file",
									"src": "path/to/submission.pdf"
								}
							]
						},
						"url": {
							"raw": "{{BASE_URL}}/api/assignments/{{ASSIGNMENT_ID}}/submit",
							"host": ["{{BASE_URL}}"],
							"path": ["api", "assignments", "{{ASSIGNMENT_ID}}", "submit"]
						}
					}
				},
				{
					"name": "Get Assignment Submissions",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{TEACHER_TOKEN}}"
							}
						],
						"url": {
							"raw": "{{BASE_URL}}/api/assignments/{{ASSIGNMENT_ID}}/submissions",
							"host": ["{{BASE_URL}}"],
							"path": ["api", "assignments", "{{ASSIGNMENT_ID}}", "submissions"]
						}
					}
				},
				{
					"name": "Grade Submission",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{TEACHER_TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"score\": 85,\n    \"feedback\": \"Jawaban sudah benar, tapi bisa lebih detail pada langkah-langkah penyelesaian. Keep up the good work!\"\n}"
						},
						"url": {
							"raw": "{{BASE_URL}}/api/assignments/submissions/{{SUBMISSION_ID}}/grade",
							"host": ["{{BASE_URL}}"],
							"path": ["api", "assignments", "submissions", "{{SUBMISSION_ID}}", "grade"]
						}
					}
				},
				{
					"name": "Update Assignment",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{TEACHER_TOKEN}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "title",
									"value": "Quiz Trigonometri Updated",
									"type": "text"
								},
								{
									"key": "description",
									"value": "Deskripsi yang sudah diupdate",
									"type": "text"
								},
								{
									"key": "maxScore",
									"value": "120",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{BASE_URL}}/api/assignments/{{ASSIGNMENT_ID}}",
							"host": ["{{BASE_URL}}"],
							"path": ["api", "assignments", "{{ASSIGNMENT_ID}}"]
						}
					}
				},
				{
					"name": "Delete Assignment",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{TEACHER_TOKEN}}"
							}
						],
						"url": {
							"raw": "{{BASE_URL}}/api/assignments/{{ASSIGNMENT_ID}}",
							"host": ["{{BASE_URL}}"],
							"path": ["api", "assignments", "{{ASSIGNMENT_ID}}"]
						}
					}
				}
			]
		},
		{
			"name": "üîî Notifications",
			"item": [
				{
					"name": "Get User Notifications",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{STUDENT_TOKEN}}"
							}
						],
						"url": {
							"raw": "{{BASE_URL}}/api/notifications?page=1&limit=10",
							"host": ["{{BASE_URL}}"],
							"path": ["api", "notifications"],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						}
					}
				},
				{
					"name": "Get Unread Count",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{STUDENT_TOKEN}}"
							}
						],
						"url": {
							"raw": "{{BASE_URL}}/api/notifications/unread-count",
							"host": ["{{BASE_URL}}"],
							"path": ["api", "notifications", "unread-count"]
						}
					}
				},
				{
					"name": "Mark Notification as Read",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{STUDENT_TOKEN}}"
							}
						],
						"url": {
							"raw": "{{BASE_URL}}/api/notifications/1/read",
							"host": ["{{BASE_URL}}"],
							"path": ["api", "notifications", "1", "read"]
						}
					}
				},
				{
					"name": "Mark All as Read",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{STUDENT_TOKEN}}"
							}
						],
						"url": {
							"raw": "{{BASE_URL}}/api/notifications/mark-all-read",
							"host": ["{{BASE_URL}}"],
							"path": ["api", "notifications", "mark-all-read"]
						}
					}
				},
				{
					"name": "Get Notifications by Type",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{STUDENT_TOKEN}}"
							}
						],
						"url": {
							"raw": "{{BASE_URL}}/api/notifications/type/ASSIGNMENT_CREATED",
							"host": ["{{BASE_URL}}"],
							"path": ["api", "notifications", "type", "ASSIGNMENT_CREATED"]
						}
					}
				},
				{
					"name": "Get Class Notifications",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{STUDENT_TOKEN}}"
							}
						],
						"url": {
							"raw": "{{BASE_URL}}/api/notifications/class/1",
							"host": ["{{BASE_URL}}"],
							"path": ["api", "notifications", "class", "1"]
						}
					}
				},
				{
					"name": "Create Deadline Reminders (Admin)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{ADMIN_TOKEN}}"
							}
						],
						"url": {
							"raw": "{{BASE_URL}}/api/notifications/deadline-reminders",
							"host": ["{{BASE_URL}}"],
							"path": ["api", "notifications", "deadline-reminders"]
						}
					}
				},
				{
					"name": "Get Notification Stats (Admin)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{ADMIN_TOKEN}}"
							}
						],
						"url": {
							"raw": "{{BASE_URL}}/api/notifications/stats",
							"host": ["{{BASE_URL}}"],
							"path": ["api", "notifications", "stats"]
						}
					}
				},
				{
					"name": "Cleanup Old Notifications (Admin)",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{ADMIN_TOKEN}}"
							}
						],
						"url": {
							"raw": "{{BASE_URL}}/api/notifications/cleanup?daysOld=30",
							"host": ["{{BASE_URL}}"],
							"path": ["api", "notifications", "cleanup"],
							"query": [
								{
									"key": "daysOld",
									"value": "30"
								}
							]
						}
					}
				}
			]
		},
		{
			"name": "üîß Testing & Error Cases",
			"item": [
				{
					"name": "Login with Wrong Password",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"siswa1@lms.com\",\n    \"password\": \"wrongpassword\"\n}"
						},
						"url": {
							"raw": "{{BASE_URL}}/api/auth/login",
							"host": ["{{BASE_URL}}"],
							"path": ["api", "auth", "login"]
						}
					}
				},
				{
					"name": "Access Protected Route Without Token",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/api/classes",
							"host": ["{{BASE_URL}}"],
							"path": ["api", "classes"]
						}
					}
				},
				{
					"name": "Student Try to Create Class",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{STUDENT_TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Unauthorized Class\",\n    \"description\": \"Student shouldn't be able to create this\",\n    \"subjectId\": 1,\n    \"academicPeriodId\": 1\n}"
						},
						"url": {
							"raw": "{{BASE_URL}}/api/classes",
							"host": ["{{BASE_URL}}"],
							"path": ["api", "classes"]
						}
					}
				},
				{
					"name": "Teacher Try to Enroll",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{TEACHER_TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"enrollCode\": \"MATH10A\"\n}"
						},
						"url": {
							"raw": "{{BASE_URL}}/api/classes/enroll",
							"host": ["{{BASE_URL}}"],
							"path": ["api", "classes", "enroll"]
						}
					}
				},
				{
					"name": "Invalid Enrollment Code",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{STUDENT_TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"enrollCode\": \"INVALID\"\n}"
						},
						"url": {
							"raw": "{{BASE_URL}}/api/classes/enroll",
							"host": ["{{BASE_URL}}"],
							"path": ["api", "classes", "enroll"]
						}
					}
				},
				{
					"name": "Submit Assignment with Invalid Data",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{STUDENT_TOKEN}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"content\": \"\"\n}"
						},
						"url": {
							"raw": "{{BASE_URL}}/api/assignments/999/submit",
							"host": ["{{BASE_URL}}"],
							"path": ["api", "assignments", "999", "submit"]
						}
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Pre-request script untuk logging",
					"console.log('üöÄ Request:', pm.request.method, pm.request.url);"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Global test script untuk logging response",
					"console.log('üìä Status:', pm.response.code);",
					"if (pm.response.code >= 400) {",
					"    console.log('‚ùå Error Response:', pm.response.text());",
					"}"
				]
			}
		}
	],
	"variable": [
		{
			"key": "BASE_URL",
			"value": "http://localhost:3000",
			"type": "string"
		}
	]
}